/*
* This header is generated by classdump-dyld 0.7
* on Monday, July 6, 2015 at 12:14:53 AM Eastern Daylight Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/CoreServices/SpringBoard.app/SpringBoard
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <FrontBoard/FBTransaction.h>
#import <SpringBoard/FBSceneManagerObserver.h>
#import <SpringBoard/FBWindowContextManagerObserver.h>
#import <SpringBoard/BSWatchdogDelegate.h>

@class FBSceneManager, NSString, FBScene, BSWatchdog;

@interface SBWaitForSceneCreationTransaction : FBTransaction <FBSceneManagerObserver, FBWindowContextManagerObserver, BSWatchdogDelegate> {

	FBSceneManager* _sceneManager;
	NSString* _sceneIDToWaitForCreation;
	FBScene* _createdScene;
	BSWatchdog* _waitForContextsWatchdog;
	double _waitForContextsTimeout;
	char _waitForContext;
	FBScene* _scene;

}

@property (nonatomic,readonly) char waitForContexts;                //@synthesize waitForContext=_waitForContext - In the implementation block
@property (nonatomic,retain) FBScene * scene;                       //@synthesize scene=_scene - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id)initWithSceneID:(id)arg1 waitForContexts:(char)arg2 waitForContextsTimeout:(double)arg3 ;
-(void)_invalidateContextWaitWatchdog;
-(id)initWithSceneID:(id)arg1 waitForContexts:(char)arg2 ;
-(char)waitForContexts;
-(FBScene *)scene;
-(void)dealloc;
-(void)_setScene:(id)arg1 ;
-(void)windowContextManagerWillStartTrackingContexts:(id)arg1 ;
-(void)_didComplete;
-(id)_customizedDescriptionProperties;
-(void)sceneManager:(id)arg1 didCreateScene:(id)arg2 withClient:(id)arg3 ;
-(void)sceneManager:(id)arg1 willUpdateScene:(id)arg2 withSettings:(id)arg3 transitionContext:(id)arg4 ;
-(void)sceneManager:(id)arg1 willCommitUpdateForScene:(id)arg2 transactionID:(unsigned)arg3 ;
-(void)sceneManager:(id)arg1 didCommitUpdateForScene:(id)arg2 transactionID:(unsigned)arg3 ;
-(void)sceneManager:(id)arg1 willDestroyScene:(id)arg2 ;
-(void)sceneManager:(id)arg1 didDestroyScene:(id)arg2 ;
-(void)_begin;
-(void)watchdogFired:(id)arg1 ;
@end

