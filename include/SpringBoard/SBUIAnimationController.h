/*
* This header is generated by classdump-dyld 0.7
* on Monday, July 6, 2015 at 12:14:50 AM Eastern Daylight Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/CoreServices/SpringBoard.app/SpringBoard
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <SpringBoard/BSTransactionObserver.h>

@protocol BSLogging;
@class UIWindow, UIView, SBApplication, SBDisplaySettings, NSHashTable, NSMutableArray, BSTransaction, NSString;

@interface SBUIAnimationController : NSObject <BSTransactionObserver> {

	UIWindow* _transitionWindow;
	UIView* _transitionContainer;
	SBApplication* _activatingApp;
	SBApplication* _deactivatingApp;
	SBDisplaySettings* _activatingAppSettings;
	SBDisplaySettings* _deactivatingAppSettings;
	/*^block*/id _commitBlock;
	int _animationState;
	char _cancelOnNextSuspendIfNecessary;
	char _didPostBeginAnimationNotification;
	char _didNotifyObserversOfCompletion;
	char _needsCATransactionActivate;
	NSHashTable* _observers;
	NSMutableArray* _startDependencies;
	char _preparing;
	SBApplication* _progressDependency;
	BSTransaction* _waitForActivationDependency;
	id<BSLogging> _debugLogger;

}

@property (nonatomic,retain) id<BSLogging> debugLogger; 
@property (nonatomic,retain,readonly) UIView * containerView;                          //@synthesize transitionContainer=_transitionContainer - In the implementation block
@property (nonatomic,retain) SBApplication * activatingApp;                            //@synthesize activatingApp=_activatingApp - In the implementation block
@property (nonatomic,retain) SBApplication * deactivatingApp;                          //@synthesize deactivatingApp=_deactivatingApp - In the implementation block
@property (nonatomic,copy) id commitBlock;                                             //@synthesize commitBlock=_commitBlock - In the implementation block
@property (assign,nonatomic) char cancelOnNextSuspendIfNecessary;                      //@synthesize cancelOnNextSuspendIfNecessary=_cancelOnNextSuspendIfNecessary - In the implementation block
@property (nonatomic,retain) SBDisplaySettings * activatingAppSettings;                //@synthesize activatingAppSettings=_activatingAppSettings - In the implementation block
@property (nonatomic,retain) SBDisplaySettings * deactivatingAppSettings;              //@synthesize deactivatingAppSettings=_deactivatingAppSettings - In the implementation block
@property (assign,nonatomic) char needsCATransactionActivate;                          //@synthesize needsCATransactionActivate=_needsCATransactionActivate - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id)initWithActivatingApp:(id)arg1 deactivatingApp:(id)arg2 ;
-(void)_prepareAnimation;
-(id)_animationIdentifier;
-(void)_noteAnimationDidFinish;
-(void)_noteAnimationDidCommit:(char)arg1 withDuration:(double)arg2 afterDelay:(double)arg3 ;
-(SBApplication *)deactivatingApp;
-(id)_getTransitionWindow;
-(SBDisplaySettings *)deactivatingAppSettings;
-(SBApplication *)activatingApp;
-(void)_cleanupAnimation;
-(void)_noteAnimationDidFail;
-(int)_animationState;
-(void)_addStartTransactionDependency:(id)arg1 ;
-(void)_cancelAnimation;
-(void)_setupStartDependencies;
-(id)_animationProgressDependency;
-(void)_applicationDependencyStateChanged;
-(SBDisplaySettings *)activatingAppSettings;
-(void)_noteAnimationDidRevealApplication;
-(char)_shouldDismissBanner;
-(char)_waitsForApplicationActivationIfNecessary;
-(char)isReasonableMomentToInterrupt;
-(void)setActivatingApp:(SBApplication *)arg1 ;
-(void)setDeactivatingApp:(SBApplication *)arg1 ;
-(void)_setAnimationState:(int)arg1 ;
-(char)__animationShouldStart;
-(void)__startAnimation;
-(char)_willAnimate;
-(void)setActivatingAppSettings:(SBDisplaySettings *)arg1 ;
-(void)setDeactivatingAppSettings:(SBDisplaySettings *)arg1 ;
-(id)__newWaitForAppActivationTransaction;
-(char)__wantsInitialProgressStateChange;
-(void)_startMonitoringStartDependency:(id)arg1 ;
-(void)__evaluateStartDependencies;
-(void)_applicationActivationStateDidChange;
-(void)__cancelAnimation;
-(void)__cleanupAnimation;
-(char)_isNullAnimation;
-(id)commitBlock;
-(void)setCommitBlock:(id)arg1 ;
-(void)__noteAnimationDidTerminateWithSuccess:(char)arg1 ;
-(void)_stopMonitoringStartDependency:(id)arg1 ;
-(void)_startTransactionDependency:(id)arg1 didComplete:(char)arg2 ;
-(char)waitingToStart;
-(void)endAnimation;
-(id)_startTransactionDependencies;
-(void)_removeStartTransactionDependency:(id)arg1 ;
-(char)cancelOnNextSuspendIfNecessary;
-(void)setCancelOnNextSuspendIfNecessary:(char)arg1 ;
-(char)needsCATransactionActivate;
-(void)setNeedsCATransactionActivate:(char)arg1 ;
-(void)_startAnimation;
-(char)isComplete;
-(void)dealloc;
-(id)init;
-(UIView *)containerView;
-(void)removeObserver:(id)arg1 ;
-(char)animating;
-(void)_setHidden:(char)arg1 ;
-(void)addObserver:(id)arg1 ;
-(void)_enumerateObserversSafely:(/*^block*/id)arg1 ;
-(void)_notifyObserversOfCompletion;
-(id<BSLogging>)debugLogger;
-(void)transactionDidComplete:(id)arg1 ;
-(void)setDebugLogger:(id<BSLogging>)arg1 ;
-(void)beginAnimation;
@end

