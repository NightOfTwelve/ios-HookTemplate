/*
* This header is generated by classdump-dyld 0.7
* on Sunday, July 5, 2015 at 9:38:37 PM Eastern Daylight Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /System/Library/Frameworks/UIKit.framework/UIKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013 by Elias Limneos.
*/

#import <UIKit/UIView.h>

@class UIView, UITextInputTraits;

@interface UIKeyboard : UIView  {

	UIView* m_snapshot;
	UITextInputTraits* m_defaultTraits;
	char m_typingDisabled;
	char m_minimized;
	char m_respondingToImplGeometryChange;
	int m_orientation;
	int m_idiom;
	char m_hasExplicitOrientation;

}

@property (assign,nonatomic) char caretBlinks; 
@property (assign,nonatomic) char caretVisible; 
@property (assign,nonatomic) int keyboardIdiom; 
@property (assign,nonatomic) char typingEnabled; 
@property (assign,getter=isMinimized,nonatomic) char minimized; 
@property (assign,nonatomic) char showsCandidatesInline; 
+(CGSize)defaultSize;
+(id)activeKeyboard;
+(CGSize)sizeForInterfaceOrientation:(int)arg1 ;
+(CGSize)defaultSizeForInterfaceOrientation:(int)arg1 ;
+(CGSize)keyboardSizeForInterfaceOrientation:(int)arg1 ;
+(char)isInHardwareKeyboardMode;
+(void)removeAllDynamicDictionaries;
+(id)activeKeyboardForScreen:(id)arg1 ;
+(void)clearActiveForScreen:(id)arg1 ;
+(void)makeKeyboardActive:(id)arg1 forScreen:(id)arg2 ;
+(void)_clearActiveKeyboard;
+(void)initImplementationNow;
+(CGRect)defaultFrameForInterfaceOrientation:(int)arg1 ;
+(char)isOnScreen;
+(char)respondsToProxGesture;
+(char)shouldMinimizeForHardwareKeyboard;
+(char)splitKeyboardEnabled;
-(id)initWithFrame:(CGRect)arg1 ;
-(void)dealloc;
-(void)setNeedsDisplay;
-(id)hitTest:(CGPoint)arg1 withEvent:(id)arg2 ;
-(char)pointInside:(CGPoint)arg1 withEvent:(id)arg2 ;
-(void)didMoveToWindow;
-(void)setFrame:(CGRect)arg1 ;
-(void)setBounds:(CGRect)arg1 ;
-(id)delegate;
-(char)isActive;
-(int)interfaceOrientation;
-(void)touchesBegan:(id)arg1 withEvent:(id)arg2 ;
-(void)touchesMoved:(id)arg1 withEvent:(id)arg2 ;
-(void)touchesEnded:(id)arg1 withEvent:(id)arg2 ;
-(void)touchesCancelled:(id)arg1 withEvent:(id)arg2 ;
-(void)_physicalButtonsBegan:(id)arg1 withEvent:(id)arg2 ;
-(void)_physicalButtonsEnded:(id)arg1 withEvent:(id)arg2 ;
-(void)_physicalButtonsCancelled:(id)arg1 withEvent:(id)arg2 ;
-(void)_deactivateForBackgrounding;
-(void)_wheelChangedWithEvent:(id)arg1 ;
-(char)_mayRemainFocused;
-(id)targetWindow;
-(char)shouldChangeFocusedItem:(id)arg1 heading:(unsigned)arg2 ;
-(char)canBecomeFocused;
-(void)willMoveToWindow:(id)arg1 ;
-(CGSize)intrinsicContentSize;
-(void)deactivate;
-(void)remoteControlReceivedWithEvent:(id)arg1 ;
-(void)updateLayout;
-(void)setCaretBlinks:(char)arg1 ;
-(void)activate;
-(void)_setRenderConfig:(id)arg1 ;
-(int)textEffectsVisibilityLevel;
-(void)acceptAutocorrection;
-(char)isMinimized;
-(char)shouldSaveMinimizationState;
-(void)prepareForGeometryChange;
-(void)geometryChangeDone:(char)arg1 ;
-(void)setCaretVisible:(char)arg1 ;
-(void)setReturnKeyEnabled:(char)arg1 ;
-(char)canHandleEvent:(id)arg1 ;
-(void)removeAutocorrectPrompt;
-(void)_resizeForKeyplaneSize:(CGSize)arg1 splitWidthsChanged:(char)arg2 ;
-(void)setMinimized:(char)arg1 ;
-(char)canDismiss;
-(char)caretBlinks;
-(void)setCorrectionLearningAllowed:(char)arg1 ;
-(void)setDefaultTextInputTraits:(id)arg1 ;
-(void)responseContextDidChange;
-(char)returnKeyEnabled;
-(char)caretVisible;
-(id)_getCurrentKeyplaneName;
-(id)_getCurrentKeyboardName;
-(id)_getLocalizedInputMode;
-(void)_setAutocorrects:(char)arg1 ;
-(id)_getAutocorrection;
-(char)_hasCandidates;
-(int)_positionInCandidateList:(id)arg1 ;
-(void)autoAdjustOrientation;
-(void)autoAdjustOrientationForSize:(CGSize)arg1 ;
-(id)_initWithFrame:(CGRect)arg1 lazily:(char)arg2 ;
-(void)clearActivePerScreenIfNeeded;
-(char)isActivePerScreen;
-(void)clearSnapshot;
-(void)takeSnapshot;
-(int)cursorLocation;
-(char)allowExternalChangeForFocusHeading:(unsigned)arg1 cursorLocation:(int)arg2 ;
-(void)setCursorLocation:(int)arg1 ;
-(char)disableInteraction;
-(void)setDisableInteraction:(char)arg1 ;
-(void)keyboardMinMaximized:(id)arg1 finished:(id)arg2 context:(id)arg3 ;
-(void)minimize;
-(void)maximize;
-(void)prepareForImplBoundsHeightChange:(float)arg1 suppressNotification:(char)arg2 ;
-(void)implBoundsHeightChangeDone:(float)arg1 suppressNotification:(char)arg2 ;
-(id)initWithDefaultSize;
-(id)initLazily;
-(void)setOrientation:(int)arg1 ;
-(char)hasAutocorrectPrompt;
-(id)defaultTextInputTraits;
-(char)typingEnabled;
-(void)setTypingEnabled:(char)arg1 ;
-(void)displayLayer:(id)arg1 ;
-(char)showPredictionBar;
-(void)setShowPredictionBar:(char)arg1 ;
-(void)syncMinimizedStateToHardwareKeyboardAttachedState;
-(void)_setPasscodeOutlineAlpha:(float)arg1 ;
-(char)showsCandidatesInline;
-(void)setShowsCandidatesInline:(char)arg1 ;
-(int)keyboardIdiom;
-(void)setKeyboardIdiom:(int)arg1 ;
-(void)manualKeyboardWillBeOrderedIn;
-(void)manualKeyboardWasOrderedIn;
-(void)manualKeyboardWillBeOrderedOut;
-(void)manualKeyboardWasOrderedOut;
-(id)_baseKeyForRepresentedString:(id)arg1 ;
-(id)_keyplaneForKey:(id)arg1 ;
-(id)_keyplaneNamed:(id)arg1 ;
-(void)_changeToKeyplane:(id)arg1 ;
-(void)_setUndocked:(char)arg1 ;
-(void)_setSplit:(char)arg1 ;
-(id)_touchPoint:(CGPoint)arg1 ;
-(id)_typeCharacter:(id)arg1 withError:(CGPoint)arg2 shouldTypeVariants:(char)arg3 baseKeyForVariants:(char)arg4 ;
-(void)_setInputMode:(id)arg1 ;
-(void)_acceptCurrentCandidate;
-(char)_isAutomaticKeyboard;
@end

